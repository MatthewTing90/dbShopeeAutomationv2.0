@using dbShopeeAutomationV2.Models;

@{
    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "ProductionDetailParamGridView";
        settings.Width = Unit.Percentage(100);

        settings.CallbackRouteValues = new { Controller = "ProductionDetailParam", Action = "ProductionDetailParamGridViewGridViewPartial", production_id = Request.Params["production_id"] };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ProductionDetailParam", Action = "ProductionDetailParamGridViewGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ProductionDetailParam", Action = "ProductionDetailParamGridViewGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ProductionDetailParam", Action = "ProductionDetailParamGridViewGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "production_detail_id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        // Product SKU
        settings.Columns.Add(col =>
        {
            col.FieldName = "product_id";
            col.Caption = "Product";

            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties prop = col.PropertiesEdit as ComboBoxProperties;
            prop.DataSource = db.TShopeeProducts.ToList();
            prop.TextField = "SKU";
            prop.ValueField = "product_id";
            prop.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
            prop.ValidationSettings.RequiredField.IsRequired = true;
        });

        // Quantity
        settings.Columns.Add(col =>
        {
            col.FieldName = "quantity";
            col.Caption = "Quantity (Size)";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;

            prop.DecimalPlaces = 2;
            prop.DisplayFormatString = "N2";
        });

        // Cannot Be Used
        settings.Columns.Add(col =>
        {
            col.FieldName = "cannot_be_used";
            col.Caption = "Not OK";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Integer;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
        });

        // Can Be Used
        settings.Columns.Add(col =>
        {
            col.FieldName = "can_be_used";
            col.Caption = "OK";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Integer;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
        });

        // Width
        settings.Columns.Add(col =>
        {
            col.FieldName = "width";
            col.Caption = "Width";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;

            prop.DecimalPlaces = 2;
            prop.DisplayFormatString = "N2";
        });

        // Length
        settings.Columns.Add(col =>
        {
            col.FieldName = "length";
            col.Caption = "Length";

            col.ColumnType = MVCxGridViewColumnType.SpinEdit;
            SpinEditProperties prop = col.PropertiesEdit as SpinEditProperties;
            prop.NumberType = SpinEditNumberType.Float;
            prop.MinValue = 0;
            prop.MaxValue = 10000000;
            prop.Increment = 0.1M;

            prop.DecimalPlaces = 2;
            prop.DisplayFormatString = "N2";
        });

        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;

    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()