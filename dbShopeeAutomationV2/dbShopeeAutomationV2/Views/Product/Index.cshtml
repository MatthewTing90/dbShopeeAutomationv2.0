@using dbShopeeAutomationV2.Models;

@{
    ViewBag.Title = "Product Form";
    Layout = "~/Views/Shared/_ProductionLayout.cshtml";
    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    int product_brand_count = db.TShopeeProductBrands.ToList().Count;
    int product_category_count = db.TShopeeProductCategories.ToList().Count;
    int product_model_count = db.TShopeeProductModels.ToList().Count;
    int product_status_count = db.TShopeeProductStatus.ToList().Count;
    int product_type_count = db.TShopeeProductTypes.ToList().Count;
    int stock_warehouse_count = db.TShopeeStockWarehouses.ToList().Count;
}

@if (product_brand_count <= 0 || product_category_count <= 0 || product_model_count <= 0 || product_status_count <= 0 || product_type_count <= 0 || stock_warehouse_count <= 0)
{
    <div class="p-3">
        <div class="warning_div border border-danger">
            <div class="row">
                <div class="col">
                    <div class="text-white text-center fw-bold h2 bg-danger">
                        Error!
                    </div>
                </div>
            </div>
            <div class="text-black h4">
                <ul>
                    @if (product_brand_count <= 0)
                    {
                        <li>There is no existing Product Brand. Please make a product brand before you proceed! </li>
                    }
                    @if (product_category_count <= 0)
                    {
                        <li>There is no existing Product Category. Please make a product category before you proceed! </li>
                    }
                    @if (product_model_count <= 0)
                    {
                        <li>There is no existing Product Model. Please make a product model before you proceed! </li>
                    }
                    @if (product_status_count <= 0)
                    {
                        <li>There is no existing Product Status. Please make a product status before you proceed! </li>
                    }
                    @if (product_type_count <= 0)
                    {
                        <li>There is no existing Product Type. Please make a product type before you proceed! </li>
                    }
                    @if (stock_warehouse_count <= 0)
                    {
                        <li>There is no existing Stock Warehouse. Please make a Stock Warehouse before you proceed! </li>
                    }
                </ul>
            </div>
        </div>
    </div>
}
else
{
    <div class="p-3">
        <div class="border border-dark">
            <div class="row">
                <div class="col">
                    <div class="bg-dark text-center h1 text-white">@ViewBag.Title</div>
                </div>
            </div>

            @using (Html.BeginForm("ProductGridViewPartialAddNew", "Product", FormMethod.Post, new { @Enctype = "multipart/form-data", @Id = "productForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="row m-2">
                    <div class="col">
                        <label>Product Image: </label>
                        @Html.TextBox("product_image", "", new { @Class = "form-control to_clear", @Type = "file", @Required = "true" })
                    </div>
                    <div class="col"></div>
                </div>

                <div class="row m-2">
                    <div class="col input_req">
                        <label>Name: </label>
                        @Html.TextBox("name", "", new { @Class = "form-control to_clear", @type = "text", @Required = "true" })
                    </div>
                    <div class="col">
                        <label>Code: </label>
                        @Html.TextBox("product_code", "", new { @Class = "form-control to_clear", @type = "text", @Placeholder = "Optional" })
                    </div>
                </div>

                <div class="row m-2">
                    <div class="col">
                        <label>SKU: </label>
                        @Html.TextBox("SKU", "", new { @Class = "form-control to_clear", @type = "text", @Placeholder = "Optional" })
                    </div>
                    <div class="col input_req">
                        <label>Status: </label>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "product_status_id";
                       settings.Width = Unit.Percentage(106);
                       settings.SelectedIndex = 0;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                       settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueField = "product_status_id";
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                   }).BindList(db.TShopeeProductStatus.ToList()).GetHtml()
                    </div>
                </div>

                <div class="to_remove">
                    <div class="row m-2">
                        <div class="col">
                            <label>Buy Price: </label>
                            @Html.DevExpress().SpinEdit(settings =>
                   {
                       settings.Name = "buy_price";
                       settings.Width = Unit.Percentage(100);
                       settings.Properties.MinValue = 0;
                       settings.Properties.MaxValue = 10000000;
                       settings.Properties.Increment = 0.1M;
                       settings.Properties.DisplayFormatString = "C";
                   }).GetHtml()
                        </div>
                        <div class="col">
                            <label>Sell Price: </label>
                            @Html.DevExpress().SpinEdit(settings =>
                   {
                       settings.Name = "sell_price";
                       settings.Width = Unit.Percentage(100);
                       settings.Properties.MinValue = 0;
                       settings.Properties.MaxValue = 10000000;
                       settings.Properties.Increment = 0.1M;
                       settings.Properties.DisplayFormatString = "C";
                   }).GetHtml()
                        </div>
                    </div>

                </div>

                <div class="row m-2">
                    <div class="col input_req">
                        <label>Brand: </label>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "product_brand_id";
                       settings.Width = Unit.Percentage(106);
                       settings.SelectedIndex = 0;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                       settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueField = "product_brand_id";
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                   }).BindList(db.TShopeeProductBrands.ToList()).GetHtml()
                    </div>
                    <div class="col input_req">
                        <label>Category: </label>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "product_category_id";
                       settings.Width = Unit.Percentage(106);
                       settings.SelectedIndex = 0;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                       settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueField = "product_category_id";
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                   }).BindList(db.TShopeeProductCategories.ToList()).GetHtml()
                    </div>
                </div>

                <div class="row m-2">
                    <div class="col input_req">
                        <label>Model: </label>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "product_model_id";
                       settings.Width = Unit.Percentage(106);
                       settings.SelectedIndex = 0;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                       settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueField = "product_model_id";
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                   }).BindList(db.TShopeeProductModels.ToList()).GetHtml()
                    </div>
                    <div class="col input_req">
                        <label>Type: </label>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "product_type_id";
                       settings.Width = Unit.Percentage(106);
                       settings.SelectedIndex = 0;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                       settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                       settings.Properties.TextField = "name";
                       settings.Properties.ValueField = "product_type_id";
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                   }).BindList(db.TShopeeProductTypes.ToList()).GetHtml()
                    </div>
                </div>
            }

            <div class="row mt-3 mx-2">
                <div class="col">
                    <button type="submit" class="btn btn-success" form="productForm">Submit Form</button>
                </div>
            </div>

            <div class="row mx-2 mb-2">
                <div class="col">
                    <div id="productFormResp">
                        @Html.Action("ProductGridViewPartial")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        $(function () {
            let productForm = $("form[id='productForm']");
            const productForm_actionLink = productForm.attr("action");
            const productForm_methodType = productForm.attr("method");

            productForm.submit(e => {
                e.preventDefault();

                let input_valArr = [...document.getElementsByClassName("input_req")]
                .map((node, ind) => node.querySelector("input[type=text]").value)
                .map(node => (node == "") ? 0 : 1);
                let submit_flag = Math.min(...input_valArr);

                if (!submit_flag) {
                    alert("Not all necessary inputs are filled in!");
                } else {
                    let fData = new FormData(productForm[0]);

                    $.ajax({
                        url: productForm_actionLink,
                        type: productForm_methodType,
                        enctype: 'multipart/form-data',
                        processData: false,  // Important!
                        contentType: false,
                        cache: false,
                        data: fData,
                        success: resp => {
                            $("#productFormResp").html(resp);
                            alert("Product has been inserted successfully!");
                            productForm.find("input[type=text], input[type=file], textarea").val("");
                        }
                    });
                }
            });
        });
    </script>
}