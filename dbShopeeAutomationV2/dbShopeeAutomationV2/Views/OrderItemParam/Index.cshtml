@using dbShopeeAutomationV2.Models;

@{
    ViewBag.Title = "Order Item Form";
    Layout = "~/Views/Shared/_EcommerceLayout.cshtml";

    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    int order_count = db.TShopeeOrders.ToList().Count;
    int product_count = db.TShopeeProducts.ToList().Count;

    // Prevents Users From Ordering Material Product
    int material_model_id = dbStatusFunction.productModelID("material");

    // Prevent Users From Selecting Product with 0 Stock Count
    List<int> productIDList = db.TShopeeStockItems
        .Where(it => it.stock_quantity > 0)
        .Select(it => (int)it.product_id).ToList();

    Dictionary<int, string> orderDict = new Dictionary<int, string>();
    db.TShopeeOrders.ToList().ForEach(it =>
    {
        orderDict.Add(it.order_id, it.order_title);
    });
}

@if (order_count <= 0 || product_count <= 0)
{
    <div class="p-3">
        <div class="warning_div border border-danger">
            <div class="row">
                <div class="col">
                    <div class="text-white text-center fw-bold h2 bg-danger">
                        Error!
                    </div>
                </div>
            </div>
            <div class="text-black h4">
                <ul>
                    @if (order_count <= 0)
                    {
                        <li>There are no existing orders! Please make an order before you proceed! </li>
                    }
                    @if (product_count <= 0)
                    {
                        <li>There are no existing products! Please make a product before you proceed! </li>
                    }
                </ul>
            </div>
        </div>
    </div>
}
else
{
    <div class="p-3">
        <div class="border border-dark">
            <div class="row">
                <div class="col">
                    <div class="bg-dark text-center h1 text-white">@ViewBag.Title</div>
                </div>
            </div>

            @using (Html.BeginForm("OrderItemParamGridViewPartialAddNew", "OrderItemParam", FormMethod.Post, new { @Id = "orderItemForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="row m-2">
                    <div class="col input_req">
                        <label>Order Title: </label>
                        @Html.TextBox("order_title", orderDict[(int)ViewData["order_id"]], new { @Class = "form-control", @Readonly = "true" })
                    </div>
                    <div class="col input_req">
                        <label>Product SKU: </label>
                        @Html.DevExpress().ComboBox(settings =>
                   {
                       settings.Name = "product_id";
                       settings.Width = Unit.Percentage(106);
                       settings.SelectedIndex = 0;
                       settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                       settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                       settings.Properties.TextField = "SKU";
                       settings.Properties.ValueField = "product_id";
                       settings.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                       settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                   }).BindList(db.TShopeeProducts.Where(it => it.product_model_id != material_model_id && productIDList.Contains(it.product_id)).ToList()).GetHtml()
                    </div>

                </div>

                <div class="to_remove">
                    <div class="row m-2">
                        <div class="col">
                            <label>Quantity: </label>
                            @Html.DevExpress().SpinEdit(settings =>
                   {
                       settings.Name = "quantity";
                       settings.Width = Unit.Percentage(100);
                       settings.Properties.MinValue = 0;
                       settings.Properties.MaxValue = 10000000;
                   }).GetHtml()
                        </div>
                        <div class="col">
                            <label>Discount Fee: </label>
                            @Html.DevExpress().SpinEdit(settings =>
                   {
                       settings.Name = "discount_fee";
                       settings.Width = Unit.Percentage(100);
                       settings.Properties.MinValue = 0;
                       settings.Properties.MaxValue = 10000000;
                       settings.Properties.Increment = 0.1M;
                       settings.Properties.DecimalPlaces = 2;
                       settings.Properties.DisplayFormatString = "C";
                   }).GetHtml()
                        </div>
                    </div>
                </div>
            }

            <div class="row mt-3 mx-2">
                <div class="col">
                    <button type="submit" form="orderItemForm" class="btn btn-outline-success">Add To Order</button>
                </div>
            </div>

            <div class="row m-2">
                <div class="col">
                    <div id="orderItemFormResp">
                        @Html.Action("OrderItemParamGridViewPartial", new { order_id = (int)ViewData["order_id"] })
                    </div>
                </div>
            </div>

            @using (Html.BeginForm("CompleteOrder", "OrderItemParam", FormMethod.Post, new { @Id = "CompleteOrderForm" }))
            {
                @Html.AntiForgeryToken()

                @Html.Hidden("order_id", ViewData["order_id"])
                <div class="row m-2">
                    <div class="col">
                        <button type="submit" class="btn btn-success" form="CompleteOrderForm">Complete Order</button>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="p-1">
        <ul>
            <li class="fst-italic">If you are unable to select a specific product, please check and ensure stock item count is not 0.</li>
        </ul>
    </div>

    <script type="text/javascript">
        $(function () {

            // Disable or Enable Button
            $("button[form='orderItemForm']").prop("disabled", '@ViewData["order_status"]'.toLowerCase() == "true");
            $("button[form='CompleteOrderForm']").prop("disabled", '@ViewData["order_status"]'.toLowerCase() == "true");

            let orderItemForm = $("form[id='orderItemForm']");
            const orderItemForm_actionLink = orderItemForm.attr("action");
            const orderItemForm_methodType = orderItemForm.attr("method");

            orderItemForm.submit(e => {
                e.preventDefault();

                let input_valArr = [...document.getElementsByClassName("input_req")]
                .map((node, ind) => node.querySelector("input[type=text]").value)
                .map(node => (node == "") ? 0 : 1);
                let submit_flag = Math.min(...input_valArr);

                if (!submit_flag) {
                    alert("Not all necessary input have been filled in!");
                } else {
                    $.ajax({
                        url: orderItemForm_actionLink,
                        type: orderItemForm_methodType,
                        data: orderItemForm.serialize(),
                        success: resp => {
                            $("#orderItemFormResp").html(resp);
                            window.location.reload();
                            $(".to_remove").find("input[type=text], textarea").val("");
                        }
                    });
                }
            });
        });
    </script>
}

