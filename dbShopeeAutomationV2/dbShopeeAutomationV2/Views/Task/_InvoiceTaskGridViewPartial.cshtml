@using dbShopeeAutomationV2.Models;
@using System.Collections.Generic;

@{
    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "InvoiceTaskGridView";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "Task", Action = "InvoiceTaskGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Task", Action = "InvoiceTaskGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Task", Action = "InvoiceTaskGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Task", Action = "InvoiceTaskGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "invoice_id";

        settings.SettingsPager.Visible = false;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = false;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        settings.Settings.ShowTitlePanel = true;
        settings.SettingsText.Title = $"Number of Orders Left: {ViewData["num_of_orders_left"]}";
        //settings.SetTitlePanelTemplateContent(content => {
        //    Html
        //});

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        // Invoice Title
        settings.Columns.Add(col => {
            col.FieldName = "invoice_title";
            col.Caption = "Invoice Code";
            col.ReadOnly = true;
        });

        // Invoice Created Date
        settings.Columns.Add(col =>
        {
            col.FieldName = "invoice_created_date";
            col.Caption = "Created Date";
            col.ReadOnly = true;

            col.ColumnType = MVCxGridViewColumnType.DateEdit;
            col.PropertiesEdit.DisplayFormatString = "yyyy-MM-dd";
            DateEditProperties prop = col.PropertiesEdit as DateEditProperties;
            prop.DisplayFormatString = "yyyy-MM-dd";
            prop.DisplayFormatInEditMode = true;
        });

        // Invoice Status
        settings.Columns.Add(col =>
        {
            col.FieldName = "invoice_status_id";
            col.Caption = "Complete?";

            col.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties prop = col.PropertiesEdit as ComboBoxProperties;
            prop.DataSource = db.TShopeeInvoiceStatus.ToList();
            prop.TextField = "name";
            prop.ValueField = "invoice_status_id";
            prop.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
        });

        // Invoice Completed Date
        settings.Columns.Add(col =>
        {
            col.FieldName = "invoice_completed_date";
            col.Caption = "Completed Date";
            col.ReadOnly = true;

            col.ColumnType = MVCxGridViewColumnType.DateEdit;
            col.PropertiesEdit.DisplayFormatString = "yyyy-MM-dd";
            DateEditProperties prop = col.PropertiesEdit as DateEditProperties;
            prop.DisplayFormatString = "yyyy-MM-dd";
            prop.DisplayFormatInEditMode = true;
        });

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()