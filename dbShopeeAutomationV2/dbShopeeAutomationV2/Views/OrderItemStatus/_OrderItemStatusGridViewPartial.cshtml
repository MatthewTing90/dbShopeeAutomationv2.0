@using dbShopeeAutomationV2.Models;
@using System.Collections.Generic;

@{
    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    Dictionary<int, string> detailDict = new Dictionary<int, string>();
    db.TShopeeDetails.ToList().ForEach(it =>
    {
        detailDict.Add(it.detail_id, it.last_updated_by);
    });

    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "OrderItemStatusGridView";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "OrderItemStatus", Action = "OrderItemStatusGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "OrderItemStatus", Action = "OrderItemStatusGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "OrderItemStatus", Action = "OrderItemStatusGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "OrderItemStatus", Action = "OrderItemStatusGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = false;
        settings.CommandColumn.ShowDeleteButton = false;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "order_item_status_id";

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        settings.Columns.Add("order_item_status_id").Caption = "ID";
        // Order item ID:
        // Show Order Name
        // Show Product Name
        settings.Columns.Add("name").Caption = "Order Item Status";
        settings.Columns.Add("description").Caption = "Description";
        settings.Columns.Add("return_merchandise_authorization_nr").Caption = "RMA ID";

        // Last Updated By
        settings.Columns.Add(col =>
        {
            col.FieldName = "Last Updated By";
            col.UnboundType = DevExpress.Data.UnboundColumnType.String;
            col.ReadOnly = true;
        });

        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName.Equals("Last Updated By"))
            {
                int detail_id = int.Parse(e.GetListSourceFieldValue("detail_id").ToString());
                e.Value = detailDict[detail_id];
            };
        };

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()