@using dbShopeeAutomationV2.Models;
@using System.Collections.Generic;

@{
    dbShopeeAutomationV2Entities db = new dbShopeeAutomationV2Entities();

    Dictionary<int, TShopeeDetail> detailDict = new Dictionary<int, TShopeeDetail>();
    db.TShopeeDetails.ToList().ForEach(it =>
    {
        detailDict.Add(it.detail_id, it);
    });

    var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "ProductVarietyGridView";
        settings.Width = Unit.Percentage(100);
        settings.CallbackRouteValues = new { Controller = "ProductVariety", Action = "ProductVarietyGridViewPartial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ProductVariety", Action = "ProductVarietyGridViewPartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ProductVariety", Action = "ProductVarietyGridViewPartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ProductVariety", Action = "ProductVarietyGridViewPartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.KeyFieldName = "product_variety_id";

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;
        settings.SettingsSearchPanel.Visible = true;

        // Header Set Center
        settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Header.VerticalAlign = VerticalAlign.Middle;

        settings.Columns.Add(col =>
        {
            col.FieldName = "product_variety_id";
            col.UnboundType = DevExpress.Data.UnboundColumnType.Integer;
            col.Caption = "ID";
            col.ReadOnly = true;
        });

        settings.Columns.Add("name").Caption = "Product Variety";

        // Last Updated By
        settings.Columns.Add(col =>
        {
            col.FieldName = "last_updated_by";
            col.Caption = "Last Updated By";
            col.UnboundType = DevExpress.Data.UnboundColumnType.String;
            col.ReadOnly = true;
        });

        settings.CustomUnboundColumnData = (s, e) =>
        {
            if (e.Column.FieldName == "last_updated_by")
            {
                int detail_id = int.Parse(e.GetListSourceFieldValue("detail_id").ToString());
                e.Value = detailDict[detail_id].last_updated_by;
            };
        };

        // Cell Styles Center
        settings.Styles.Cell.HorizontalAlign = HorizontalAlign.Center;
        settings.Styles.Cell.VerticalAlign = VerticalAlign.Middle;
    });

    if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()